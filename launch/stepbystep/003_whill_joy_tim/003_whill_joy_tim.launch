<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<node name="sick_tim_5xx" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen">
		<!--<param name="robot_description" command="$(find xacro)/xacro.py '$(find sick_scan)/urdf/example.urdf.xacro'" />-->
		<param name="scanner_type" type="string" value="sick_tim_5xx"/>
		<param name="hostname" type="string" value="192.168.0.2"/>
		<param name="cloud_topic" type="string" value="tim_right_cloud"/>
		<param name="frame_id" type="str" value="tim_right_link"/>
		<!-- -135° -->
		<param name="min_ang" type="double" value="-2.35619449"/>
		<!-- 135° -->
		<param name="max_ang" type="double" value="2.35619449"/>
		<param name="use_binary_protocol" type="bool" value="true"/>
		<param name="range_max" type="double" value="100.0"/>
		<param name="intensity" type="bool" value="True"/>
		<param name="port" type="string" value="2112"/>
		<param name="timelimit" type="int" value="5"/>
		<param name="sw_pll_only_publish" type="bool" value="true"/>
		<param name="min_intensity" type="double" value="0.0"/>
		<!-- Set range of LaserScan messages to infinity, if intensity < min_intensity (default: 0) -->
		<remap from="scan" to="tim_right_scan"/>
		<remap from="imu" to="tim_right_imu" />
	</node>
	<!-- x[m] y[m] z[m] yaw(z)[rad] pitch(y)[rad] roll(x)[rad] -->
	<node pkg="tf" type="static_transform_publisher" name="stp_tim_frame" args="0.83 -0.31 0 -0.785 0 0 base_link tim_right_link 100" />
	<arg name="model" default="$(find ros_whill)/xacro/modelc.xacro" />
	<arg name="gui" default="true" />
	<param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
		<remap from="/joint_states" to="/whill/states/jointState" />
	</node>
	<arg name="serialport" default="$(env TTY_WHILL)"/>
	<node pkg="ros_whill" type="ros_whill" name="whill" output="screen">
		<rosparam file="$(find ros_whill)/params/initial_speedprofile.yaml" command="load" />
		<param name="keep_connected" value="true" />
		<!-- Serial Device name -->
		<param name="serialport" value="$(arg serialport)"/>
		<!-- Output Odometry tf or not. If other node publishes odom->base_link tf, Change value to "false" -->
		<param name="publish_tf" value="true"/>
	</node>
	<!--<node name="wagen_controller" pkg="sick_wagen" type="wagen_controller" output="screen">-->
	<node name="wagen_controller" pkg="sick_wagen" type="wagen_controller" output="screen">
		<remap from="cmd_vel" to="/whill/controller/cmd_vel"/>
	</node>
	<node name="joy_node" pkg="joy" type="joy_node" args="_dev:=/dev/input/js0"/>
	<node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find sick_wagen)/launch/stepbystep/003_whill_joy_tim/003_whill_joy_tim.rviz">
	</node>
</launch>
